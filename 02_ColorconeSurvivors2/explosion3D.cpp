//=========================================================================================
//
//[explosion3D.cpp]
//Author:日野澤匠泉
//
//=========================================================================================

//*****************************************************************************************
//インクルード
//*****************************************************************************************
#include "explosion3D.h"
#include "manager.h"
#include "renderer.h"
#include "debugproc.h"

//*****************************************************************************************
//マクロ定義
//*****************************************************************************************
#define SIZE	(30.0f)		//画像サイズ

//*****************************************************************************************
//静的メンバ変数初期化
//*****************************************************************************************
LPDIRECT3DTEXTURE9 CExplosion3D::m_pTexture = NULL;

//=========================================================================================
//爆発のコンストラクタ
//=========================================================================================
CExplosion3D::CExplosion3D()
{//各種初期化

	m_nCounterAnim = 0;
	m_nPatternAnim = 0;
}

//=========================================================================================
//爆発のデストラクタ
//=========================================================================================
CExplosion3D::~CExplosion3D()
{

}

//=========================================================================================
//爆発のテクスチャ読み込み
//=========================================================================================
HRESULT CExplosion3D::Load(void)
{
	//オブジェクト取得
	CRenderer *pRenderer = CManager::GetManager()->GetRenderer();

	//デバイス取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,
		"data\\TEXTURE\\explosion000.png",
		&m_pTexture);

	return S_OK;
}

//=========================================================================================
//爆発のテクスチャ破棄
//=========================================================================================
void CExplosion3D::Unload(void)
{
	//テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=========================================================================================
//爆発の初期化処理
//=========================================================================================
HRESULT CExplosion3D::Init(void)
{
	//オブジェクトの初期化処理
	CObjectBillboard::Init();

	//種類の設定
	SetType(TYPE_EXPLOSION);

	//アニメーション設定処理
	CObjectBillboard::SetAnim(m_nPatternAnim);

	return S_OK;
}

//=========================================================================================
//爆発の終了処理
//=========================================================================================
void CExplosion3D::Uninit(void)
{
	//オブジェクトの終了処理
	CObjectBillboard::Uninit();
}

//=========================================================================================
//爆発の更新処理
//=========================================================================================
void CExplosion3D::Update(void)
{
	m_nCounterAnim++;

	if ((m_nCounterAnim % 8) == 0)
	{
		//カウンターを初期値に戻す
		m_nCounterAnim = 0;

		//パターンをプラスする
		m_nPatternAnim++;
	}

	if (m_nPatternAnim > 8)
	{//総パターン数を超えた

		//オブジェクトの破棄
		Uninit();

		//処理を終える
		return;

		//カウンターを初期値に戻す
		m_nCounterAnim = 0;
	}

	//アニメーション設定処理
	CObjectBillboard::SetAnim(m_nPatternAnim);
}

//=========================================================================================
//爆発の描画処理
//=========================================================================================
void CExplosion3D::Draw(void)
{
	//オブジェクトの描画処理
	CObjectBillboard::Draw();
}

//=========================================================================================
//爆発の設定処理
//=========================================================================================
void CExplosion3D::SetPosotion(D3DXVECTOR3 pos, D3DXVECTOR3 move)
{
	//位置情報取得
	D3DXVECTOR3 Explosionpos, Explosionmove;

	//位置情報取得
	Explosionpos = CObjectBillboard::GetPosition();

	//移動量取得
	Explosionmove = CObjectBillboard::GetRot();

	Explosionpos = pos;
	Explosionmove = move;
}

//=========================================================================================
//爆発の設定処理
//=========================================================================================
CExplosion3D *CExplosion3D::Create(D3DXVECTOR3 pos)
{
	//ポインタの変数を宣言
	CExplosion3D *pExplosion;

	//オブジェクト2Dの生成
	pExplosion = new CExplosion3D;

	if (pExplosion != NULL)
	{//使用されているとき

		//初期化処理
		pExplosion->Init();

		//テクスチャの割り当て
		pExplosion->BindTexture(m_pTexture);
	}

	//位置設定処理
	pExplosion->SetPos(pos);

	//サイズ設定処理
	pExplosion->SetSize(SIZE, SIZE);

	//オブジェクト情報を返す
	return pExplosion;
}
