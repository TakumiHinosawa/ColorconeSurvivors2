//=========================================================================================
//
// ポイント処理 [point.cpp]
//	Author:日野澤匠泉
//
//=========================================================================================

//*****************************************************************************************
//インクルード
//*****************************************************************************************
#include "point.h"
#include "manager.h"
#include "renderer.h"
#include "objectbillboard.h"

//*****************************************************************************************
//マクロ定義
//*****************************************************************************************
#define MAX_EFFECT		(1028)		//エフェクトの最大数
#define SIZE			(20.0f)		//エフェクトのサイズ
#define LIFE			(50)		//エフェクトの寿命

//*****************************************************************************************
//静的メンバ変数初期化
//*****************************************************************************************
LPDIRECT3DTEXTURE9 CPoint::m_pTexture = nullptr;

//=========================================================================================
//コンストラクタ
//=========================================================================================
CPoint::CPoint()
{
	m_nLife = 0;
}

//=========================================================================================
//デストラクタ
//=========================================================================================
CPoint::~CPoint()
{

}

//=========================================================================================
//ポイントのテクスチャ読み込み
//=========================================================================================
HRESULT CPoint::Load(void)
{
	//オブジェクト取得
	CRenderer* pRenderer = CManager::GetManager()->GetRenderer();

	//デバイス取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,
		"data\\TEXTURE\\point.png",
		&m_pTexture);

	return S_OK;
}

//=========================================================================================
//ポイントのテクスチャ破棄
//=========================================================================================
void CPoint::Unload(void)
{
	//テクスチャの破棄
	if (m_pTexture != nullptr)
	{
		m_pTexture->Release();
		m_pTexture = nullptr;
	}
}

//=========================================================================================
//ポイントの初期化処理
//=========================================================================================
HRESULT CPoint::Init(void)
{
	//種類の設定
	SetType(TYPE_POINT);

	//ビルボードの初期化
	CObjectBillboard::Init();

	m_nLife = LIFE;

	return S_OK;
}

//=========================================================================================
//ポイントの終了処理
//=========================================================================================
void CPoint::Uninit(void)
{
	//ビルボードの終了処理
	CObjectBillboard::Uninit();
}

//=========================================================================================
//ポイントの更新処理
//=========================================================================================
void CPoint::Update(void)
{
	//ライフの減少
	m_nLife--;

	if (m_nLife <= 0)
	{
		Uninit();
		return;
	}

	D3DXCOLOR col;
	col = D3DXCOLOR(1.0f, 1.0f, 0.0f, 1.0f);

	//設定処理
	SetCol(col);
	SetSize(SIZE, SIZE);
	SetVtx();
}

//=========================================================================================
//ポイントの描画処理
//=========================================================================================
void CPoint::Draw(void)
{
	//オブジェクト取得
	CRenderer* pRenderer = CManager::GetManager()->GetRenderer();

	//デバイス取得
	LPDIRECT3DDEVICE9 pDevice = pRenderer->GetDevice();

	CObjectBillboard::Draw();
}

//=========================================================================================
//ポイントの生成処理
//=========================================================================================
CPoint* CPoint::Create(D3DXVECTOR3 targetpos)
{
	//ポインタの変数を宣言
	CPoint* pPoint;

	//オブジェクト3Dの生成
	pPoint = new CPoint;

	if (pPoint != NULL)
	{//使用されているとき

		//初期化処理
		pPoint->Init();

		//テクスチャ
		pPoint->BindTexture(m_pTexture);

		pPoint->SetPos(targetpos);
	}

	//オブジェクト情報を返す
	return pPoint;
}

