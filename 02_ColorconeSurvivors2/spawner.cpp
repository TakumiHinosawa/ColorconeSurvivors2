//=========================================================================================
//
// スポナー
// Author:日野澤匠泉	[spawner.cpp]
//
//=========================================================================================
#include "spawner.h"
#include "manager.h"
#include "renderer.h"
#include "debugproc.h"
#include "objectX.h"
#include "playerx.h"
#include "score.h"
#include "time.h"
#include "game.h"
#include "enemyX.h"
#include "effect.h"

//=========================================================================================
//マクロ定義
//=========================================================================================
#define ROTATION	(1.2f)		//移動量

//=========================================================================================
//スポナーのコンストラクタ	
//=========================================================================================
CSpawner::CSpawner()
{
	m_nSpwanCtr = 0;
	m_nLife = 10;
}

//=========================================================================================
//スポナーのデストラクタ
//=========================================================================================
CSpawner::~CSpawner()
{

}

//=========================================================================================
//スポナーの初期化処理
//=========================================================================================
HRESULT CSpawner::Init(void)
{
	//オブジェクトの初期化処理
	CObjectX::Init("data\\MODEL\\spawner_00.x");

	//種類の設定
	SetType(TYPE_SPAWNER);

	//位置更新
	SetPosition(D3DXVECTOR3(0.0f, 500.0f, -200.0f));

	return S_OK;
}

//=========================================================================================
//スポナーの終了処理
//=========================================================================================
void CSpawner::Uninit(void)
{
	//オブジェクトの終了処理
	CObjectX::Uninit();
}

//=========================================================================================
//スポナーの更新処理
//=========================================================================================
void CSpawner::Update(void)
{
	Spawn();

	//エネミー角度取得
	D3DXVECTOR3 EnemyRot = CObjectX::GetRot();

	// 毎フレーム、回転角度を増加
	EnemyRot.y += ROTATION * 0.016666f;

	D3DXVECTOR3 pos = CObjectX::GetPosition();

	//向き更新
	SetRot(EnemyRot);

	//デバッグ情報取得
	CDebugProc* pDebug = CManager::GetManager()->GetDebugProc();

	//デバッグ表示
	pDebug->Print("[スポナー] ( X:%f Y:%f Z:%f )\n\n", EnemyRot.x, EnemyRot.y, EnemyRot.z);
}

//=========================================================================================
//スポナーの描画処理
//=========================================================================================
void CSpawner::Draw(void)
{
	//オブジェクトの描画処理
	CObjectX::Draw();
}

//=========================================================================================
//スポナーの生成処理
//=========================================================================================
CSpawner* CSpawner::Create(D3DXVECTOR3 pos)
{
	//ポインタの変数を宣言
	CSpawner* pSpawner;

	//オブジェクト3Dの生成
	pSpawner = new CSpawner;

	if (pSpawner != nullptr)
	{//使用されているとき

		//初期化処理
		pSpawner->Init();
		pSpawner->SetPosition(pos);
	}

	//オブジェクト情報を返す
	return pSpawner;
}

//=========================================================================================
//スポナーのヒット処理
//=========================================================================================
void CSpawner::Hit(void)
{
	m_nLife--;

	//スコアの情報取得
	CScore* pScore = CGame::GetScore();

	//スコアの加算
	pScore->AddScore(100);

	if (m_nLife <= 0)
	{
		//終了処理
		CSpawner::Uninit();
	}
}

//=========================================================================================
//スポーンチャンク設定
//=========================================================================================
void CSpawner::Spawn(void)
{
	m_nSpwanCtr++;		//カウンターの加算
	D3DXVECTOR3 pos = GetPosition();

	if (m_nSpwanCtr >= 100)
	{
		//敵の生成
		CEnemyX* enemy = CEnemyX::Create();
		enemy->SetPosition(pos);

		m_nSpwanCtr = 0;	//カウンター初期化
	}
}
